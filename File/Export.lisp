#|
defarea (town area area-name size-x size-y transition-pts init-contents)
|#

(defun export-for-mage-game (file-name)
  (with-open-file (fn file-name :direction :output :if-exists :supersede)
    (let ((size-x (cadr (array-dimensions (obj-array Tile-File))))
	  (size-y (car (array-dimensions (obj-array Tile-File))))
	  (name (obj-name Tile-File))
	  )
      (princ "(defarea town " fn)
      (princ name fn)
      (princ " \"" fn)
      (princ name fn)
      (princ "\" " fn)
      (princ size-x fn)
      (princ " " fn)
      (princ size-y fn)
      (princ " '(trans-pts) '(" fn)
      (loop for y below (cadr (array-dimensions map))
	 do (progn (princ "(" fn)
		   (loop for x below (car (array-dimensions map))
		      do (progn (princ (aref file-array x y) fn)
				(princ " " fn)))
		   (princ ")" fn)
		   (fresh-line fn))
	   )
      (princ ") )" fn)
      )
    )
  )
